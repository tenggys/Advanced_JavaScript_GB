/*Задание 1
Используя Symbol.iterator, создайте объект "Музыкальная коллекция", который можно итерировать. Каждая итерация должна возвращать следующий альбом из коллекции.

Создайте объект musicCollection, который содержит массив альбомов и имеет свойство-символ Symbol.iterator.

Каждый альбом имеет следующую структуру:

{
title: "Название альбома",
artist: "Исполнитель",
year: "Год выпуска"
}
Реализуйте кастомный итератор для объекта musicCollection. Итератор должен перебирать альбомы по порядку.

Используйте цикл for...of для перебора альбомов в музыкальной коллекции и вывода их на консоль в формате:

Название альбома - Исполнитель (Год выпуска)*/

const musicCollections = [
    {title: "Дети и радуга",artist: "Anacondaz",year: 2013},
    {title: "220 кВт",artist: "СЛОТ",year: 2018},
    {title: "Наука",artist: "Кровосток",year: 2023}
]

musicCollections[Symbol.iterator] = function() {
    return {
        current: 0,
        to: this.length,
        next() {
            return this.current < this.to
            ? {done: false, value: musicCollections[this.current++]}
            : {done: true}
        }
    }
}

for (let musicCollection of musicCollections) {
    console.log(`${musicCollection.title} - ${musicCollection.artist} (${musicCollection.year})`)
}

/*Задание 2
Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах. 
Клиенты приходят и делают заказы на разные блюда.

Необходимо создать систему управления этими заказами, которая позволит:

Отслеживать, какой повар готовит какое блюдо.
Записывать, какие блюда заказал каждый клиент.
Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента. В качестве ключей для клиентов используйте объекты.

Повара и их специализации:

Виктор - специализация: Пицца.
Ольга - специализация: Суши.
Дмитрий - специализация: Десерты.

Блюда и их повара:

Пицца "Маргарита" - повар: Виктор.
Пицца "Пепперони" - повар: Виктор.
Суши "Филадельфия" - повар: Ольга.
Суши "Калифорния" - повар: Ольга.
Тирамису - повар: Дмитрий.
Чизкейк - повар: Дмитрий.

Заказы:

Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
Клиент Ирина заказала: Чизкейк.*/

const kitchen = new Map();

kitchen.set("Маргарита", "Виктор");
kitchen.set("Пепперони", "Виктор");
kitchen.set("Филадельфия", "Ольга");
kitchen.set("Калифорния", "Ольга");
kitchen.set("Тирамису", "Дмитрий");
kitchen.set("Чизкейк", "Дмитрий");

const specializations = new Map([
    ["Виктор", "Пицца"],
    ["Ольга", "Суши"],
    ["Дмитрий ", "Десерты"],
]);

const AlexCustomer = new Set();
AlexCustomer.add("Пепперони").add("Тирамису");

const MariCustomer = new Set();
MariCustomer.add("Калифорния").add("Маргарита");

const IriCustomer = new Set();
IriCustomer.add("Чизкейк");

const customer = new Map();
customer.set("Виктор", AlexCustomer);
customer.set("Ольга", MariCustomer);
customer.set("Дмитрий", IriCustomer);

//вывод спецаиализации поваров
specializations.forEach((key, value) => {
    console.log(`${key} - специализация: ${value}`)
})

//вывод какой повар готовит какое блюдо
console.log(`Пицца "Маргарита" - повар: ${kitchen.get("Маргарита")}`)
console.log(`Пицца "Пепперони" - повар: ${kitchen.get("Пепперони")}`)
console.log(`Суши "Филадельфия" - повар: ${kitchen.get("Филадельфия")}`)
console.log(`Тирамису - повар: ${kitchen.get("Тирамису")}`)
console.log(`Чизкейк - повар: ${kitchen.get("Чизкейк")}`)

//вывод какие блюда заказал каждый клиент
console.log(`Клиент Алексей заказал: ${[...customer.get("Виктор")]}`);
console.log(`Клиент Мария заказал: ${[...customer.get("Ольга")]}`);
console.log(`Клиент Ирина заказал: ${[...customer.get("Дмитрий")]}`);
